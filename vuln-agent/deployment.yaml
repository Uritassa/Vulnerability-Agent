apiVersion: v1
kind: ServiceAccount
metadata:
  name: vuln-agent-sa
  annotations:
    eks.amazonaws.com/role-arn: "YOUR_SECRET_MANAGER_ROLE_ARN"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vuln-agent-cr
rules:
- apiGroups: ["aquasecurity.github.io"]
  resources: ["vulnerabilityreports"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vuln-agent-crb
subjects:
- kind: ServiceAccount
  name: vuln-agent-sa
roleRef:
  kind: ClusterRole
  name: vuln-agent-cr
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: vulnerability-agent
spec:
  schedule: "0 0 * * 0"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: vuln-agent-sa
          nodeSelector:
            nodegroup: devsec
          restartPolicy: OnFailure
          containers:
          - name: vuln-agent
            image: REGISTRY/REPOSITORY:TAG
            env:
            - name: API_KEY
              valueFrom:
                secretKeyRef:
                  name: opsgenie-api-secret
                  key: API_KEY
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: opsgenie-api
spec:
  refreshInterval: "1h"
  secretStoreRef:
    name: cluster-secret-store
    kind: ClusterSecretStore
  target:
    name: opsgenie-api-secret
    creationPolicy: Owner
  data:
    - secretKey: API_KEY
      remoteRef:
        key: Opsgenie-API
        property: api-key